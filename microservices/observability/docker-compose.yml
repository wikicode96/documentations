version: '3.8'

services:

  # Postgres
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    networks:
      - observability-net
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: observability
    volumes:
      - observability_db:/var/lib/postgresql/data

  # Postgres DB UI
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_ui
    restart: always
    networks:
      - observability-net
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    depends_on:
      - db
    volumes:
      - observability_pgadmin:/var/lib/pgadmin

  # Kafka
  kafka:
    image: apache/kafka:latest
    container_name: kafka-broker
    networks:
      - observability-net
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    volumes:
      - observability_kafka_data:/var/lib/kafka/data
      - observability_kafka_data:/etc/kafka/secrets
      - observability_kafka_data:/mnt/shared/config

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    networks:
      - observability-net
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: "" # No Zookeeper necesario para KRaft (Kafka sin Zookeeper)
    depends_on:
      - kafka

  # Jaeger
#  jaeger:
#    image: jaegertracing/all-in-one:latest
#    container_name: jaeger
#    networks:
#      - observability-net
#    ports:
#      - "16686:16686" # the jaeger UI
#      #- "4317:4317" # the OpenTelemetry collector grpc
#    environment:
#      - COLLECTOR_OTLP_ENABLED=true
#    volumes:
#      - observability_jaeger:/tmp

  # Orders Microservice
  orders-service:
    build: ./orders-service
    container_name: orders-service
    networks:
      - observability-net
    ports:
      - "8085:8080"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  # Payments Microservice
  payments-service:
    build: ./payments-service
    container_name: payments-service
    networks:
      - observability-net
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

networks:
  observability-net:
    driver: bridge

volumes:
  observability_db:
    name: observability_db
  observability_pgadmin:
    name: observability_pgadmin
  observability_kafka_data:
    name: observability_kafka_data
  observability_jaeger:
    name: observability_jaeger